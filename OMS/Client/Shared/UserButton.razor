@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@attribute [Authorize]

<AuthorizeView>
    <div class="dropdown">
        <button @onclick="ToggleUserMenu"
                @onfocusout="HideUserMenu"
                class="btn btn-secondary dropdown-tggler user-button">
            <i class="oi oi-person"></i> 
        </button>
        <div class="dropdown-menu @UserMenuCssClass">
            <a href="profile" class="dropdown-item">Profile</a>
            <hr />
            <AdminMenu />
            <button class="dropdown-item" @onclick="Logout">Logout</button>
        </div>
    </div>
</AuthorizeView>


@code {
    private bool showUserMenu = false;

    private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
    }

    private async Task HideUserMenu()
    {
        await Task.Delay(200);
        showUserMenu = false;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }
}
